# https://github.com/golang/go/issues/14481
FROM golang:1.9

ENTRYPOINT ["bash", "setup-volume", "chpst", "-u", "app"]

# Debian's /bin/sh doesn't support `set -o pipefail`.
SHELL ["/bin/bash", "-c"]

RUN set -ex -o pipefail; \
    mkdir -p /usr/local/sbin; \
    mkdir -p /usr/local/lib/site_perl; \
    build_pkgs="unzip"; \
    apt update; \
    apt install -y --no-install-recommends $build_pkgs \
	runit jq; \
    ### docker
    DOCKER="17.06.2-ce"; \
    wget -q -O /tmp/docker.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER.tgz; \
    tar -xz -C /tmp -f /tmp/docker.tgz; \
    mv /tmp/docker/docker /usr/bin; \
    ### docker-compose
    DOCKER_COMPOSE="1.16.1"; \
    wget -q -O /usr/local/bin/docker-compose https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE/docker-compose-`uname -s`-`uname -m`; \
    chmod +x /usr/local/bin/docker-compose; \
    ### AWS cli
    wget -q -O /tmp/awscli-bundle.zip https://s3.amazonaws.com/aws-cli/awscli-bundle.zip; \
    unzip /tmp/awscli-bundle.zip -d /tmp; \
    /tmp/awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws; \
    ### setup-volume
    SETUP_VOLUME="0.1.0"; \
    wget -q -O /usr/local/sbin/setup-volume https://raw.githubusercontent.com/powerman/alpine-runit-volume/v$SETUP_VOLUME/setup-volume; \
    chmod +x /usr/local/sbin/setup-volume; \
    ### migrate
    MIGRATE="0.2.6"; \
    wget -q -O /tmp/migrate.tgz https://github.com/powerman/migrate/archive/v$MIGRATE.tar.gz; \
    tar xzf /tmp/migrate.tgz -C /tmp/; \
    mv /tmp/migrate-$MIGRATE/script/* /usr/local/bin/; \
    mv /tmp/migrate-$MIGRATE/lib/* /usr/local/lib/site_perl/; \
    ### gotmpl
    GOTMPL="1.1.1"; \
    wget -q -O /usr/local/bin/gotmpl https://github.com/powerman/gotmpl/releases/download/v$GOTMPL/gotmpl-`uname -s`-`uname -m`; \
    chmod +x /usr/local/bin/gotmpl; \
    ### Cleanup
    apt autoremove -y $build_pkgs; \
    rm -rf /var/lib/apt/lists/* /tmp/*

ARG UPGRADE
RUN echo $UPGRADE > /var/cache/UPGRADE && \
    apt update && apt full-upgrade -y && rm -rf /var/lib/apt/lists/*

ARG UPGRADE_GO
RUN set -ex -o pipefail; \
    echo $UPGRADE_GO > /var/cache/UPGRADE_GO; \
    ### Common dependencies for our projects
    go get -v golang.org/x/tools/cmd/cover; \
    go get -v github.com/powerman/gotestcover; \
    go get -v github.com/alecthomas/gometalinter; \
    gometalinter --install; \
    # https://github.com/golang/go/issues/18315
    go get -v gopkg.in/check.v1; \
    go get -v github.com/powerman/structlog; \
    export GOBIN=/tmp/bin; \
    go get -v golang.org/x/{crypto,net,text,tools}/...; \
    ### Speedup static build
    while ! CGO_ENABLED=0 go install -v -installsuffix static all; do go get -v -t ./...; done; \
    ### Enable `go get` as user "app"
    # Keep /go/src ctime/mtime less than /go/{bin,pkg}
    chmod -R a+rwX /go/src; \
    chmod -R a+rwX /go/bin /go/pkg; \
    find /go/bin /go/pkg -type f -print0 | xargs -0 touch; \
    ### Cleanup
    rm -rf /tmp/bin
