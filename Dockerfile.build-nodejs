FROM alpine

COPY paxmark /usr/local/bin/

ENTRYPOINT \
    paxmark; \
    setup-volume true; \
    HOME=/home/app exec chpst -u $(groups app | sed 's/ /:/g;s/:\+/:/g') "$0" "$@";

RUN set -ex -o pipefail; \
    mkdir -p /usr/local/sbin; \
    build_pkgs="wget"; \
    apk add --no-cache $build_pkgs \
	git openssh-client tar gzip ca-certificates bash attr runit sudo \
	python jq yarn nodejs; \
    ### Compatibility with PaX kernel for existing packages
    mkdir -p /etc/paxmark.d; \
    echo em /usr/bin/node > /etc/paxmark.d/nodejs; \
    ### docker
    DOCKER="17.12.1-ce"; \
    wget -q -O /tmp/docker.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER.tgz; \
    tar -xz -C /tmp -f /tmp/docker.tgz; \
    mv /tmp/docker/docker /usr/bin; \
    ### glibc for docker-compose
    # https://github.com/docker/compose/blob/master/Dockerfile.run
    GLIBC="2.27-r0"; \
    wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub; \
    wget -q -O /tmp/glibc-$GLIBC.apk https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC/glibc-$GLIBC.apk; \
    apk add /tmp/glibc-$GLIBC.apk; \
    ln -s /lib/libz.so.1 /lib/libc.musl-x86_64.so.1 /usr/glibc-compat/lib/; \
    ### docker-compose
    DOCKER_COMPOSE="1.21.2"; \
    wget -q -O /usr/local/bin/docker-compose https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE/docker-compose-`uname -s`-`uname -m`; \
    chmod +x /usr/local/bin/docker-compose; \
    ### AWS cli
    wget -q -O /tmp/awscli-bundle.zip https://s3.amazonaws.com/aws-cli/awscli-bundle.zip; \
    unzip /tmp/awscli-bundle.zip -d /tmp; \
    /tmp/awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws; \
    ### setup-volume
    SETUP_VOLUME="0.2.0"; \
    wget -q -O /usr/local/sbin/setup-volume https://raw.githubusercontent.com/powerman/alpine-runit-volume/v$SETUP_VOLUME/setup-volume; \
    chmod +x /usr/local/sbin/setup-volume; \
    ### gotmpl
    GOTMPL="1.1.1"; \
    wget -q -O /usr/local/bin/gotmpl https://github.com/powerman/gotmpl/releases/download/v$GOTMPL/gotmpl-`uname -s`-`uname -m`; \
    chmod +x /usr/local/bin/gotmpl; \
    ### Cleanup
    apk del $build_pkgs; \
    rm -rf /tmp/*

ARG UPGRADE
RUN echo $UPGRADE > /var/cache/UPGRADE && \
    apk --no-cache upgrade; \
    paxmark; \
    yarn global add ember-cli bower npm
